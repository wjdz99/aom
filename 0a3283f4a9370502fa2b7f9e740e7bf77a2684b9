{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5581dff4_1df9bedc",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 1
      },
      "lineNbr": 974,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-10T22:24:39Z",
      "side": 1,
      "message": "Julio: Based on Note 2, we should be able to add +1 to the sec strength 3 and remove the entire Note 2, right?\n\nI.e., if we add +1 to the sec strength 3, we don\u0027t really need a comment, because we are following the AV1 spec faithfully. (Well, the reader needs to see that the reduced sec strength is never 3 or 4, so it can be packed with the pri strength without further processing.)",
      "revId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a8bb576_ed732ae7",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 1
      },
      "lineNbr": 974,
      "author": {
        "id": 3678645
      },
      "writtenOn": "2024-12-11T03:40:34Z",
      "side": 1,
      "message": "Well, we have flexibility when it comes to defining what \"reduced strength CDEF\" means in code, as we set the rules of the derivation. As long as reduced strength values are smaller than the original values we\u0027ll be producing valid CDEF values for both packing and bitstream signaling purposes, while also being true to the concept of \"reducing strength\".\n\nTo follow up on your example: defining sec strengths of 3 (actually 4) as reduced 1 (i.e. by not adding +1) is as valid as defining them as reduced 2 (i.e. by adding +1). This is because both 1 and 2 both fall within the valid sec strength range. Not adding +1 is more compact in code, so that\u0027s why I went that way.\n\nDoes this answer your question, Wan-Teh? Maybe I misunderstood something.",
      "parentUuid": "5581dff4_1df9bedc",
      "revId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d3ef5db_608048db",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 1
      },
      "lineNbr": 974,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-11T03:53:50Z",
      "side": 1,
      "message": "Yes, thanks for the reply. This is a matter of preference -- more code vs. more comment. Either one is fine here.\n\nIf we add +1, we have a nice-looking reduction by half of sec strength: 4-\u003e2-\u003e1-\u003e0. And it won\u0027t raise the question -- did you forget that 3 is actually 4?",
      "parentUuid": "5a8bb576_ed732ae7",
      "revId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "0a3283f4a9370502fa2b7f9e740e7bf77a2684b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}
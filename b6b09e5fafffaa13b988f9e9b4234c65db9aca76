{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "089499bf_697c181d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:12:11Z",
      "side": 1,
      "message": "James: Please take a look. In this CL we convert only one struct type as an example, so we can reach consensus on the approach.\n\nJerome: I made pretty much the same changes in my experiment. I suggest just some tweaks.",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7c1820d_7b5b0bc7",
        "filename": "av1/ratectrl_rtc.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:12:11Z",
      "side": 1,
      "message": "Optional: Also add the `Aom` prefix to the function, so that it matches the type of the input parameter exactly.",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec526c59_733b83f5",
        "filename": "av1/ratectrl_rtc.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 5960
      },
      "writtenOn": "2024-12-13T18:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7c1820d_7b5b0bc7",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5502507_4a63ca4e",
        "filename": "av1/ratectrl_rtc.h",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:12:11Z",
      "side": 1,
      "message": "Nit: `struct` can be omitted in C++.",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ac649e0_2f108140",
        "filename": "av1/ratectrl_rtc.h",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 5960
      },
      "writtenOn": "2024-12-13T18:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5502507_4a63ca4e",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a15550bc_9b411790",
        "filename": "av1/ratectrl_rtc.h",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:12:11Z",
      "side": 1,
      "message": "[This comment is outside the scope of this CL, just for discussion.]\n\nI wonder if we should also add the `aom_` prefix to these C functions.",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30c3ba7d_3517c1ce",
        "filename": "av1/ratectrl_rtc.h",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 5960
      },
      "writtenOn": "2024-12-13T18:19:00Z",
      "side": 1,
      "message": "The use of prefix in libaom is fairly inconsistent - some functions use `aom` and some use `av1`...",
      "parentUuid": "a15550bc_9b411790",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e93d218a_f801358b",
        "filename": "av1/ratectrl_rtc.h",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:47:36Z",
      "side": 1,
      "message": "All the publis functions in libaom use the `aom_` prefix. Some internal functions (typically the support functions) also use the `aom_` prefix.\n\nThe `av1_` prefix is only used with internal functions in libaom.",
      "parentUuid": "30c3ba7d_3517c1ce",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1417e03e_27ec7e8c",
        "filename": "examples/svc_encoder_rtc.cc",
        "patchSetId": 3
      },
      "lineNbr": 1670,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-12-13T18:12:11Z",
      "side": 1,
      "message": "Use `aom::` instead (as you do in line 2031) since we are in C++.",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9a6e9c4_05414836",
        "filename": "examples/svc_encoder_rtc.cc",
        "patchSetId": 3
      },
      "lineNbr": 1670,
      "author": {
        "id": 5960
      },
      "writtenOn": "2024-12-13T18:19:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1417e03e_27ec7e8c",
      "revId": "b6b09e5fafffaa13b988f9e9b4234c65db9aca76",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}